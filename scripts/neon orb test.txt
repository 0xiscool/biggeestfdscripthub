-- RC7/2016L Compatible: Orb Pet with Smooth Animation (For Filtering Disabled games)

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()

-- Create a neon orb
local orb = Instance.new("Part")
orb.Shape = Enum.PartType.Ball
orb.Size = Vector3.new(3, 3, 3) -- Smaller size
orb.Anchored = true
orb.CanCollide = false
orb.Material = Enum.Material.Neon
orb.Parent = workspace

-- Create a BillboardGui for the orb's name
local nameTag = Instance.new("BillboardGui")
nameTag.Size = UDim2.new(3, 0, 1, 0) -- Adjusted to fit the smaller orb
nameTag.Adornee = orb
nameTag.AlwaysOnTop = true
nameTag.Parent = orb

local nameLabel = Instance.new("TextLabel")
nameLabel.Size = UDim2.new(1, 0, 1, 0)
nameLabel.BackgroundTransparency = 1
nameLabel.TextColor3 = Color3.new(1, 1, 1)
nameLabel.TextScaled = true
nameLabel.Font = Enum.Font.SourceSansBold
nameLabel.Text = "discord.gg/TNRDA3Fz8S"
nameLabel.Parent = nameTag

-- Orb Movement Logic
local angle = 0
local radius = 8 -- Smaller distance from the player
local yOffset = 0 -- Controls the up-and-down movement
local rotationSpeed = math.rad(2) -- Slower rotation speed
local bounceSpeed = 1.5 -- Slower up-and-down motion

game:GetService("RunService").RenderStepped:Connect(function()
    if character and character:FindFirstChild("HumanoidRootPart") then
        local rootPart = character.HumanoidRootPart

        -- Calculate the orb's position (rotation and slight up-and-down)
        angle = angle + rotationSpeed -- Slower rotation
        yOffset = math.sin(tick() * bounceSpeed) * 1.5 -- Smooth up-and-down motion, max +/-1.5
        local offsetX = math.cos(angle) * radius
        local offsetZ = math.sin(angle) * radius
        orb.Position = rootPart.Position + Vector3.new(offsetX, 3 + yOffset, offsetZ)

        -- Change the orb's color dynamically
        orb.Color = Color3.fromHSV((tick() % 5) / 5, 1, 1)
    end
end)
